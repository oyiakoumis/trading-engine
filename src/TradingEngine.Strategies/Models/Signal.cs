using TradingEngine.Domain.Enums;
using TradingEngine.Domain.ValueObjects;

namespace TradingEngine.Strategies.Models
{
    /// <summary>
    /// Represents a trading signal generated by a strategy
    /// </summary>
    public class Signal
    {
        public Symbol Symbol { get; }
        public OrderSide Side { get; }
        public Quantity Quantity { get; }
        public SignalType Type { get; }
        public double Confidence { get; }
        public string Reason { get; }
        public Price? TargetPrice { get; }
        public Price? StopLoss { get; }
        public Price? TakeProfit { get; }
        public Timestamp GeneratedAt { get; }

        public Signal(
            Symbol symbol,
            OrderSide side,
            Quantity quantity,
            SignalType type,
            double confidence,
            string reason,
            Price? targetPrice = null,
            Price? stopLoss = null,
            Price? takeProfit = null)
        {
            Symbol = symbol;
            Side = side;
            Quantity = quantity;
            Type = type;
            Confidence = Math.Max(0, Math.Min(1, confidence)); // Clamp between 0 and 1
            Reason = reason;
            TargetPrice = targetPrice;
            StopLoss = stopLoss;
            TakeProfit = takeProfit;
            GeneratedAt = Timestamp.Now;
        }

        public bool IsValid() => Confidence > 0.5 && !Quantity.IsZero;

        public override string ToString()
        {
            return $"Signal: {Symbol} {Side} {Quantity} | Type: {Type} | " +
                   $"Confidence: {Confidence:P} | Reason: {Reason}";
        }
    }

    /// <summary>
    /// Type of trading signal
    /// </summary>
    public enum SignalType
    {
        Entry,      // Enter a new position
        Exit,       // Exit existing position
        Increase,   // Increase position size
        Reduce,     // Reduce position size
        Hold        // No action
    }
}